-- Get the player's character
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Define the RE function
local function RE(RemoteName)
    return require(game:GetService("ReplicatedStorage").ClientModules.Core.RouterClient.RouterClient).get(RemoteName)
end

-- Function to teleport to a position
local function teleportTo(position)
    local targetCFrame = CFrame.new(position)
    humanoidRootPart.CFrame = targetCFrame
    humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    humanoidRootPart.RotVelocity = Vector3.new(0, 0, 0)
    wait(0.1)
end

-- Function to create a hollow cylindrical barrier (like a wall) around a position
local function createBarrier(position)
    local radius = 10 -- Bán kính của tường thành
    local height = 20 -- Chiều cao của tường
    local thickness = 1 -- Độ dày của tường
    local segments = 16 -- Số lượng đoạn để tạo vòng tròn

    for i = 0, segments - 1 do
        local angle = (2 * math.pi / segments) * i
        local x = position.X + radius * math.cos(angle)
        local z = position.Z + radius * math.sin(angle)
        local segment = Instance.new("Part")
        segment.Shape = Enum.PartType.Block
        segment.Size = Vector3.new(thickness, height, 2 * radius * math.tan(math.pi / segments))
        segment.Position = Vector3.new(x, position.Y + height / 2, z)
        segment.Anchored = true
        segment.CanCollide = true
        segment.Transparency = 0
        segment.BrickColor = BrickColor.new("Bright red")
        segment.Material = Enum.Material.Neon
        segment.Orientation = Vector3.new(0, -math.deg(angle), 0)
        segment.Parent = game.Workspace
    end
end

-- Function to move naturally to a target position
local function moveNaturally(startPos, endPos)
    local distance = (endPos - startPos).Magnitude
    local steps = math.floor(distance / 2)
    local direction = (endPos - startPos).Unit
    
    for i = 1, steps do
        local newPosition = startPos + (direction * (i * 2))
        teleportTo(newPosition)
        humanoid:MoveTo(newPosition)
        wait(0.2)
    end
    teleportTo(endPos)
    humanoid:MoveTo(endPos)
end

-- Function to check if teleport was successful
local function checkTeleportSuccess(targetPosition)
    local maxAttempts = 5
    local attempt = 1
    local tolerance = 1
    
    while attempt <= maxAttempts do
        local currentPosition = humanoidRootPart.Position
        local distance = (currentPosition - targetPosition).Magnitude
        
        if distance <= tolerance then
            return true
        end
        
        teleportTo(targetPosition)
        wait(0.5)
        attempt = attempt + 1
    end
    return false
end

-- Step 1: Fire the UnsubscribeFromHouse remote
local unsubscribeArgs = {
    [1] = game:GetService("Players").LocalPlayer,
    [2] = true
}
RE("HousingAPI/UnsubscribeFromHouse"):InvokeServer(unpack(unsubscribeArgs))

-- Step 2: Buy the item multiple times using a for loop
local totalPurchases = 30 -- Số lần mua (mỗi lần mua 1 vật phẩm)
for i = 1, totalPurchases do
    local buyArgs = {
        [1] = "pets",
        [2] = "spring_2025_super_saru",
        [3] = {
            ["buy_count"] = 1 -- Mua 1 vật phẩm mỗi lần
        }
    }
    RE("ShopAPI/BuyItem"):InvokeServer(unpack(buyArgs))
    wait(0) -- Đợi 0 giây giữa các lần mua để tránh spam server
end
wait(5)

-- Step 3: Teleport to first position and move naturally to second position
local firstPosition = Vector3.new(8989, 6530, 12070)
local secondPosition = Vector3.new(8982.46875, 6526.1015625, 12083.5029296875)

teleportTo(firstPosition)
moveNaturally(firstPosition, secondPosition)

wait(10)

-- Step 4: Create barrier first, then teleport to final position
local finalPosition = Vector3.new(74.45714569091797, 39.694610595703125, -1571.4041748046875)

createBarrier(finalPosition) -- Tạo rào chắn rỗng trước
teleportTo(finalPosition)

-- Check teleport success
checkTeleportSuccess(finalPosition)
